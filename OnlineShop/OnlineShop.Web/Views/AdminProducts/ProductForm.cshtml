@model OnlineShop.Web.Models.ViewModels.ProductFormVM

@{
	ViewData["Title"] = "ProductsForm";
}

<h1 class="text-center">Product Form</h1>

@if (Model.Product.Id == 0)
{
	<h4>Create Product</h4>
}
else
{
	<h4>Edit: @Model.Product.Title</h4>
}
<hr />

<div class="row">
	<div class="col-md-12">
		<form asp-action="Save" method="post" enctype="multipart/form-data">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>

			<h1>Base Info</h1>
			<hr />
			<div class="form-group">
				<label asp-for="@Model.Product.Title" class="control-label"></label>
				<input asp-for="@Model.Product.Title" class="form-control" />
				<span asp-validation-for="@Model.Product.Title" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Product.Price" class="control-label"></label>
				<input asp-for="@Model.Product.Price" class="form-control" />
				<span asp-validation-for="@Model.Product.Price" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Product.Quantity" class="control-label"></label>
				<input asp-for="@Model.Product.Quantity" class="form-control" />
				<span asp-validation-for="@Model.Product.Quantity" class="text-danger"></span>
			</div>

			<h1>Categories</h1>
			<hr />
			<div class="form-group">
				<label asp-for="@Model.Product.CategoryId" class="control-label"></label>
				<select id="search" asp-for="@Model.Product.CategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "Id", "Title"))">
					<option>Select category</option>
				</select>
				<span asp-validation-for="@Model.Product.CategoryId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Product.SubcategoryId" class="control-label"></label>
				<select id="list" asp-for="@Model.Product.SubcategoryId" class="form-control"></select>
				<span asp-validation-for="@Model.Product.SubcategoryId" class="text-danger"></span>
			</div>

			<h1>Description</h1>
			<hr />
			<div class="form-group">
				<label asp-for="@Model.Product.ShortDescription" class="control-label"></label>
				<textarea asp-for="@Model.Product.ShortDescription" class="form-control"></textarea>
				<span asp-validation-for="@Model.Product.ShortDescription" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Product.Description" class="control-label"></label>
				<textarea asp-for="@Model.Product.Description" class="form-control"></textarea>
				<span asp-validation-for="@Model.Product.Description" class="text-danger"></span>
			</div>


			<h1>Image</h1>
			<hr />
			<div class="form-group">
				<label asp-for="@Model.Product.ImageUrl" class="control-label"></label>
				<input asp-for="@Model.Product.ImageUrl" class="form-control" />
				<span asp-validation-for="@Model.Product.ImageUrl" class="text-danger"></span>
			</div>


			<input type="hidden" asp-for="@Model.Product.Id" />
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary btn-block" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

	<script>
		$(document).ready(function () {
			$("#search").on("change", function () {
				$list = $("#list");
				$.ajax({
					url: "/api/Subcategories",
					type: "GET",
					data: { categoryId: $("#search option:selected").val() }, //id of the state which is used to extract cities
					traditional: true,
					success: function (result) {
						$list.empty();
						$.each(result, function (i, item) {
							$list.append('<option value="' + item["id"] + '"> ' + item["title"] + ' </option>');
						});
					},
					error: function () {
						alert("Something went wrong call the police");
					}
				});
			});
		});
	</script>
}
